---
#Test secret
apiVersion: v1
kind: Secret
metadata:
  name:  db-secret
  namespace: production
data:
   username:  ZGJhZG1pbg==
   password:  UGFzc3dvcmQ=
   dbname: c3Jtc3lzdGVt
type: Opaque

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: production
  labels:
    app: pvc-postgres
  name: postgres-pvc
spec:
  #storageClassName: slow
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: production
  name: postgres
  labels:
    service: postgresdb
spec:
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
      - name: volume-mount-hack
        image: busybox
        command: ["sh", "-c", "chown -R 999:999 /var/lib/postgresql/"]
        volumeMounts:
        - name: postgres-pv-claim
          mountPath: /var/lib/postgresql/data
          subPath: postgres
      containers:
      - image: postgres:9.6.2
        name: postgresql
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: dbname
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-pv-claim
          mountPath: /var/lib/postgresql/data
          subPath: postgres
      volumes:
      - name: postgres-pv-claim
        persistentVolumeClaim:
          claimName: postgres-pvc

---
kind: Service
apiVersion: v1
metadata:
  namespace: production
  name: srmsystemdb
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: production
  name: db-service
spec:
  template:
    metadata:
      labels:
        app: db-service
    spec:
      initContainers:
      - image: akubrachenko/init-container:test
        name: init-container-postgres
        env:
        - name: PGDATABASE
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: dbname
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        command: ['sh', '-c', '/bin/bash /tmp/check_dump.sh']
      containers:
      - image: akubrachenko/db-service:test
        name: db-service
        ports:
        - containerPort: 5002
        env:
        - name: POSTGRES_HOST
          value: srmsystemdb
        - name: POSTGRES_PORT
          value: "5432"
        - name: PGDATABASE
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: dbname
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password 
---
kind: Service
apiVersion: v1
metadata:
  namespace: production
  name: db-service
spec:
  selector:
    app: db-service
  ports:
  - protocol: TCP
    port: 5002
    targetPort: 5002